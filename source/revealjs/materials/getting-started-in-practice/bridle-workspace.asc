#!/usr/bin/env -vS BASH_ENV="${ASCDIR}/bridle-workspace.env" asciinema-rec_script
: PROMPT="${PROMPT_CWD}"

# # The new `workspace` folder
# 1. *Delete* potentially old `workspace` folder.
# 2. *Create* new and empty `workspace` folder.
# 3. *Change into* the new and empty `workspace` folder.

rm -rf workspace && mkdir workspace && cd workspace
: PROMPT="${PROMPT_WKS}"

: echo "${DIVIDING_LINE}"
sleep 3
: clear
# # The new `.venv` folder with the *Python 3 virtual environment*
# 1. Just *create* new folder with Python 3 bindings, but empty package store.
python3 -m venv --clear --copies .venv

# 2. Just *activate* the Python 3 virtual environment.
source .venv/bin/activate
: OLDPROMPT="${PROMPT}"
: PROMPT="(.venv) ${OLDPROMPT}"

# 3. Just *install* and *upgrade* Python 3 core packages.
pip install --upgrade pip setuptools

# 4. Just *install* and *upgrade* the *West meta-tool*.
pip install --upgrade west

: echo "${DIVIDING_LINE}"
sleep 3
: clear
# # The new `bridle` folder with the *Bridle source code*

# 1. Just *init* and *update* the West workspace with Bridle *v3.4*.
west init -m https://github.com/tiacsys/bridle --mr v3.4-branch
west update --path-cache /var/tmp/ascrec-workspace

# 2. Just *export* CMake packages for *Zephyr* and *Bridle*.
sleep 3
west zephyr-export
west bridle-export

: echo "${DIVIDING_LINE}"
sleep 3
: clear
# # Just *install* and *upgrade* Python packages as required by *Zephyr*
pip install --upgrade --requirement zephyr/scripts/requirements.txt

: echo "${DIVIDING_LINE}"
sleep 3
: clear
# # Just *install* and *upgrade* Python packages as required by *Bridle*
pip install --upgrade --requirement bridle/scripts/requirements.txt

: echo "${DIVIDING_LINE}"
sleep 3
: clear
# # Say *Hello World!* on *qemu_cortex_m3*
: QEMU_EXTRA_FLAGS=""
west build -p always -b qemu_cortex_m3 zephyr/samples/hello_world
west build -t run &
: sleep 1
: kill $(jobs -lp | tail -1)

: echo "${DIVIDING_LINE}"
sleep 12
