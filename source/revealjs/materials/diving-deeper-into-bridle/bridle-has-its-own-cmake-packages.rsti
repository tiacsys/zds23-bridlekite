.. Never add or change more than content, instead edit structure in files:
   ../part-X.rsti or ../../materials.rsti

Bridle has its own CMake package
================================

.. revealjs-section::
   :data-auto-animate:

.. include:: /docblocks/mastering-cmake-finding-packages.rsti
.. include:: /docblocks/zephyr-build-zephyr-cmake-package.rsti

.. include:: /revealjs/materials/diving-deeper-into-bridle/svgbob-bridle-cmake-packages-1.rsti

.. revealjs-break::

.. include:: /docblocks/mastering-cmake-finding-packages.rsti
.. include:: /docblocks/zephyr-build-zephyr-cmake-package.rsti

.. include:: /revealjs/materials/diving-deeper-into-bridle/svgbob-bridle-cmake-packages-2.rsti

:strong-red:`Challenge:` How can we identify the :strong:`correct workspace`,
:code-red:`based on Bridle`?

.. revealjs-break::

.. include:: /docblocks/mastering-cmake-finding-packages.rsti
.. include:: /docblocks/zephyr-build-zephyr-cmake-package.rsti

.. include:: /revealjs/materials/diving-deeper-into-bridle/svgbob-bridle-cmake-packages-3.rsti

:strong-red:`Challenge:` How can we identify the :strong:`correct workspace`,
:code-red:`based on Bridle`?

.. revealjs-break::

.. include:: /docblocks/mastering-cmake-finding-packages.rsti
.. include:: /docblocks/zephyr-build-zephyr-cmake-package.rsti

.. include:: /revealjs/materials/diving-deeper-into-bridle/svgbob-bridle-cmake-packages-4.rsti

:strong-green:`Solution:` Provide our :green:`own CMake Package` and use it.

.. revealjs-break::

.. include:: /docblocks/mastering-cmake-finding-packages.rsti
.. include:: /docblocks/bridle-west-west-bridle-cmds.rsti

.. include:: /revealjs/materials/diving-deeper-into-bridle/svgbob-bridle-cmake-packages-5.rsti

.. rst-class:: left-justified legend

   :|WARNING|:: Freestanding mode for Bridle not usable. Bridle back to Zephyr
                default is not yet implemented, see |[BUG] issue 104|_.

CMake Modules injected into Zephyr by Bridle
--------------------------------------------

.. revealjs-section::

.. include:: /docblocks/mastering-cmake-modules.rsti
.. include:: /docblocks/zephyr-build-zephyr-cmake-package.rsti

.. include:: /revealjs/materials/diving-deeper-into-bridle/svgbob-bridle-cmake-packages-6.rsti

.. revealjs-break::
   :data-background-image: _static/revealjs/materials/diving-deeper-into-bridle/bridle-cmake-modules-bridle-requirements-cmake.svg
   :data-background-position: right 2% top 20%
   :data-background-size: 20%
   :data-background-repeat: no-repeat
   :data-background-opacity: 1.0

.. include:: /docblocks/bridle-cmake-modules-bridle-requirements-cmake.rsti

.. rst-class:: left-justified

   Bridle's toolchain requirements converter (TXT |CRT| CMake):

   * determine and set the **required Zephyr SDK** version:
     :code:`set(`\ :code-green:`BRIDLE_TOOLCHAIN_ZEPHYR_SDK_REQUIRED_VERSION`
     :code:`…)`
   * determine and set the **allowed Zephyr SDK** version:
     :code:`set(`\ :code-green:`BRIDLE_TOOLCHAIN_ZEPHYR_SDK_VERSION`
     :code:`…)`
   * determine and set the **required Doxygen** version:
     :code:`set(`\ :code-green:`BRIDLE_DOXYGEN_REQUIRED_VERSION`
     :code:`…)`
   * determine and set the **required Sphinx** version:
     :code:`set(`\ :code-green:`ZEPHYR_SPHINX_REQUIRED_VERSION`
     :code:`…)`

.. rst-class:: left-justified legend

   .. container:: flex-container

      .. container:: pct100

         .. list-table::
            :class: longtable
            :align: center
            :widths: 50 30 30 50 30
            :header-rows: 1
            :stub-columns: 0

            * - :code-green:`${BRIDLE_BASE}`\ :code:`/scripts/`
              - Zephyr SDK
              - Doxygen
              - :code-green:`${ZEPHYR_BASE}`\ :code:`/scripts/`
              - Sphinx

            * - :code-green:`tools-versions-minimum.txt`
              - .. rli:: https://github.com/tiacsys/bridle/raw/v3.4.0/scripts/tools-versions-minimum.txt
                   :language: text
                   :lines: 8
              - .. rli:: https://github.com/tiacsys/bridle/raw/v3.4.0/scripts/tools-versions-minimum.txt
                   :language: text
                   :lines: 10
              - :code-green:`requirements-doc.txt`
              - .. rli:: https://github.com/tiacsys/zephyr/raw/tiacsys/v3.4-branch/scripts/requirements-doc.txt
                   :language: text
                   :lines: 4

            * - :code-green:`tools-versions-linux.txt`
              - .. rli:: https://github.com/tiacsys/bridle/raw/v3.4.0/scripts/tools-versions-linux.txt
                   :language: text
                   :lines: 11
              - .. rli:: https://github.com/tiacsys/bridle/raw/v3.4.0/scripts/tools-versions-linux.txt
                   :language: text
                   :lines: 12
              -
              -

            * - :code-green:`tools-versions-macos.txt`
              - .. rli:: https://github.com/tiacsys/bridle/raw/v3.4.0/scripts/tools-versions-macos.txt
                   :language: text
                   :lines: 9
              -
              -
              -

            * - :code-green:`tools-versions-win10.txt`
              - .. rli:: https://github.com/tiacsys/bridle/raw/v3.4.0/scripts/tools-versions-win10.txt
                   :language: text
                   :lines: 9
              -
              -
              -

.. revealjs-break::
   :data-background-image: _static/revealjs/materials/diving-deeper-into-bridle/bridle-cmake-modules-bridle-version-cmake.svg
   :data-background-position: right 2% top 20%
   :data-background-size: 20%
   :data-background-repeat: no-repeat
   :data-background-opacity: 1.0

.. include:: /docblocks/bridle-cmake-modules-bridle-version-cmake.rsti

.. rst-class:: left-justified

   Bridle's version generator for the CMake package and |Bridle Services|_ API:

   * determine this **Bridle package version** from
     :code-green:`${BRIDLE_BASE}/VERSION`
   * loaded multiple times by :code-green:`BridleConfigVersion.cmake`
   * used by :code-green:`${BRIDLE_BASE}/cmake/gen_version_h.cmake`
     to **auto-generate** :code-green:`generated/version_bridle.h`
   * setup CMake variables, e.g.:

.. rst-class:: left-justified legend

   .. container:: flex-container

      .. container:: pct80

         .. list-table::
            :class: longtable
            :align: center
            :widths: 50 50 5 50 50
            :header-rows: 0
            :stub-columns: 0

            * - :code:`set(PROJECT_VERSION`
              - :code:`0.2.5.99)`

              - | │

              - :code:`set(`\ :code-green:`BRIDLE_VERSION_STRING`
              - :code:`"0.2.5-extraver")`

            * - :code:`set(`\ :code-green:`BRIDLE_VERSION_MAJOR`
              - :code:`0)`

              - | │

              - :code:`set(`\ :code-green:`BRIDLEVERSION`
              - :code:`0x20563)`

            * - :code:`set(`\ :code-green:`BRIDLE_VERSION_MINOR`
              - :code:`2)`

              - | │

              - :code:`set(`\ :code-green:`BRIDLE_VERSION_NUMBER`
              - :code:`0x205)`

            * - :code:`set(`\ :code-green:`BRIDLE_PATCHLEVEL`
              - :code:`5)`

              - | │

              - :code:`set(`\ :code-green:`BRIDLE_VERSION_CODE`
              - :code:`517)`

.. revealjs-break::
   :data-background-image: _static/revealjs/materials/diving-deeper-into-bridle/bridle-cmake-modules-bridle-toolchain-cmake.svg
   :data-background-position: right 2% top 20%
   :data-background-size: 20%
   :data-background-repeat: no-repeat
   :data-background-opacity: 1.0

.. include:: /docblocks/bridle-cmake-modules-bridle-toolchain-cmake.rsti

.. rst-class:: left-justified

   Bridle's toolchain version guard for the Zephyr SDK:

   * verify that required variables have been defined, see
     :code-green:`cmake/modules/bridle/requirements.cmake` above
   * verify that selected toolchain matches the required version:
     :code-green:`find_package(Zephyr-sdk ${BRIDLE_TOOLCHAIN_ZEPHYR_SDK_REQUIRED_VERSION}` :code:`…)`
   * currently, only the Zephyr SDK is supported

-----

.. rst-class:: left-justified

   .. admonition:: Note:
      :class: note

      .. rst-class:: left-justified legend

         :|FindZephyr-sdk.cmake|:: :code:`find_package(Zephyr-sdk …)`

CMake Modules used by Bridle internally
---------------------------------------

.. revealjs-section::

.. include:: /docblocks/mastering-cmake-modules.rsti
.. include:: /docblocks/bridle-west-west-bridle-cmds.rsti

.. include:: /revealjs/materials/diving-deeper-into-bridle/svgbob-bridle-cmake-packages-7.rsti

.. revealjs-break::
   :data-background-image: _static/revealjs/materials/diving-deeper-into-bridle/bridle-cmake-modules-doxygen-cmake.svg
   :data-background-position: right 2% top 20%
   :data-background-size: 20%
   :data-background-repeat: no-repeat
   :data-background-opacity: 1.0

.. include:: /docblocks/bridle-cmake-modules-doxygen-cmake.rsti

.. rst-class:: left-justified

   * verify that required variables have been defined, see
     :code-green:`cmake/modules/bridle/requirements.cmake` above
   * looking for required Doxygen version:
     :code-green:`find_package(Doxygen ${BRIDLE_DOXYGEN_REQUIRED_VERSION}` :code:`…` :code-green:`)`
   * looking for required Doxygen components:
     :code-green:`find_package(` :code:`…` :code-green:`REQUIRED dot mscgen)`
   * setup CMake variables to programs found:

     * :code-green:`DOXYGEN_EXECUTABLE`
     * :code-green:`DOXYGEN_DOT_EXECUTABLE`
     * :code-green:`DOXYGEN_MSCGEN_EXECUTABLE`

-----

.. rst-class:: left-justified

   .. admonition:: Note:
      :class: note

      .. rst-class:: left-justified legend

         :|FindDoxygen.cmake|:: :code:`find_package(Doxygen …)`

.. revealjs-break::
   :data-background-image: _static/revealjs/materials/diving-deeper-into-bridle/bridle-cmake-modules-sphinx-cmake.svg
   :data-background-position: right 2% top 20%
   :data-background-size: 20%
   :data-background-repeat: no-repeat
   :data-background-opacity: 1.0

.. include:: /docblocks/bridle-cmake-modules-sphinx-cmake.rsti

.. rst-class:: left-justified

   * verify that required variables have been defined, see
     :code-green:`cmake/modules/bridle/requirements.cmake` above
   * looking for required Sphinx version:
     :code-green:`find_package(Sphinx ${ZEPHYR_SPHINX_REQUIRED_VERSION}` :code:`…` :code-green:`)`
   * looking for required Sphinx components:
     :code-green:`find_package(` :code:`…` :code-green:`REQUIRED build)`
   * setup CMake variables to programs found:

     * :code-green:`SPHINX_BUILD_EXECUTABLE`
     * :code-green:`SPHINXBUILD` (deprecated but still used)

-----

.. rst-class:: left-justified

   .. admonition:: Note:
      :class: note

      .. rst-class:: left-justified legend

         :|FindSphinx.cmake|:: :code:`find_package(Sphinx …)`

.. Local variables:
   coding: utf-8
   mode: text
   mode: rst
   End:
   vim: fileencoding=utf-8 filetype=rst number :
